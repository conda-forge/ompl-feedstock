From 3d731b65c9338af14878af42ad5437d713729487 Mon Sep 17 00:00:00 2001
From: Mark Moll <mark@picknik.ai>
Date: Thu, 30 Mar 2023 17:14:49 -0700
Subject: [PATCH] fix compiler warnings

---
 CMakeModules/CompilerSettings.cmake           |  4 ++
 src/ompl/base/src/PlannerData.cpp             |  2 -
 src/ompl/geometric/planners/fmt/src/BFMT.cpp  | 40 +++----------------
 .../datastructures/BundleSpaceSequenceImpl.h  |  4 --
 4 files changed, 10 insertions(+), 40 deletions(-)

diff --git a/CMakeModules/CompilerSettings.cmake b/CMakeModules/CompilerSettings.cmake
index 1c39705071..01aa271c89 100644
--- a/CMakeModules/CompilerSettings.cmake
+++ b/CMakeModules/CompilerSettings.cmake
@@ -2,6 +2,10 @@ set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS OFF)
 
+# force <boost/functional.hpp> to avoid deprecated use of
+# std::unary_function and std::binary_function
+add_compile_definitions(_HAS_AUTO_PTR_ETC=0)
+
 if(CMAKE_COMPILER_IS_GNUCXX)
     add_definitions(-W -Wall -Wextra -Wno-system-headers)
     # prepend optimizion flag (in case the default setting doesn't include one)
diff --git a/src/ompl/base/src/PlannerData.cpp b/src/ompl/base/src/PlannerData.cpp
index f428f684ec..92a67470bc 100644
--- a/src/ompl/base/src/PlannerData.cpp
+++ b/src/ompl/base/src/PlannerData.cpp
@@ -79,7 +79,6 @@ void ompl::base::PlannerData::clear()
 
 void ompl::base::PlannerData::decoupleFromPlanner()
 {
-    unsigned int count = 0;
     for (unsigned int i = 0; i < numVertices(); ++i)
     {
         PlannerDataVertex &vtx = getVertex(i);
@@ -96,7 +95,6 @@ void ompl::base::PlannerData::decoupleFromPlanner()
             stateIndexMap_.erase(oldState);
             // Add the new, cloned state to stateIndexMap
             stateIndexMap_[clone] = i;
-            count++;
         }
     }
 }
diff --git a/src/ompl/geometric/planners/fmt/src/BFMT.cpp b/src/ompl/geometric/planners/fmt/src/BFMT.cpp
index 8a7fb51888..bfe95b409a 100644
--- a/src/ompl/geometric/planners/fmt/src/BFMT.cpp
+++ b/src/ompl/geometric/planners/fmt/src/BFMT.cpp
@@ -124,12 +124,6 @@ namespace ompl
             BiDirMotionPtrs motions;
             nn_->list(motions);
 
-            int numStartNodes = 0;
-            int numGoalNodes = 0;
-            int numEdges = 0;
-            int numFwdEdges = 0;
-            int numRevEdges = 0;
-
             int fwd_tree_tag = 1;
             int rev_tree_tag = 2;
 
@@ -140,21 +134,10 @@ namespace ompl
                 // For samples added to the fwd tree, add incoming edges (from fwd tree parent)
                 if (inFwdTree)
                 {
-                    if (motion->parent_[FWD] == nullptr)
-                    {
-                        // Motion is a forward tree root node
-                        ++numStartNodes;
-                    }
-                    else
+                    if (motion->parent_[FWD] != nullptr)
                     {
-                        bool success =
-                            data.addEdge(base::PlannerDataVertex(motion->parent_[FWD]->getState(), fwd_tree_tag),
-                                         base::PlannerDataVertex(motion->getState(), fwd_tree_tag));
-                        if (success)
-                        {
-                            ++numFwdEdges;
-                            ++numEdges;
-                        }
+                        data.addEdge(base::PlannerDataVertex(motion->parent_[FWD]->getState(), fwd_tree_tag),
+                                     base::PlannerDataVertex(motion->getState(), fwd_tree_tag));
                     }
                 }
             }
@@ -167,21 +150,10 @@ namespace ompl
                 // For samples added to a tree, add incoming edges (from fwd tree parent)
                 if (inRevTree)
                 {
-                    if (motion->parent_[REV] == nullptr)
+                    if (motion->parent_[REV] != nullptr)
                     {
-                        // Motion is a reverse tree root node
-                        ++numGoalNodes;
-                    }
-                    else
-                    {
-                        bool success =
-                            data.addEdge(base::PlannerDataVertex(motion->getState(), rev_tree_tag),
-                                         base::PlannerDataVertex(motion->parent_[REV]->getState(), rev_tree_tag));
-                        if (success)
-                        {
-                            ++numRevEdges;
-                            ++numEdges;
-                        }
+                        data.addEdge(base::PlannerDataVertex(motion->getState(), rev_tree_tag),
+                                     base::PlannerDataVertex(motion->parent_[REV]->getState(), rev_tree_tag));
                     }
                 }
             }
diff --git a/src/ompl/multilevel/datastructures/BundleSpaceSequenceImpl.h b/src/ompl/multilevel/datastructures/BundleSpaceSequenceImpl.h
index 3b1142052f..d5a9e75dbe 100644
--- a/src/ompl/multilevel/datastructures/BundleSpaceSequenceImpl.h
+++ b/src/ompl/multilevel/datastructures/BundleSpaceSequenceImpl.h
@@ -393,9 +393,6 @@ void ompl::multilevel::BundleSpaceSequence<T>::getPlannerData(ompl::base::Planne
 
         // lift all states into the last bundle space (original state space)
         // Required for decouplePlannerData() function in PlannerData
-
-        unsigned int ctr = 0;
-
         for (unsigned int vidx = Nvertices; vidx < data.numVertices(); vidx++)
         {
             ompl::multilevel::PlannerDataVertexAnnotated &v =
@@ -405,7 +402,6 @@ void ompl::multilevel::BundleSpaceSequence<T>::getPlannerData(ompl::base::Planne
 
             base::State *s_lift = getTotalState(k, v.getBaseState());
             v.setTotalState(s_lift, Qlast->getBundle());
-            ctr++;
         }
         Nvertices = data.numVertices();
     }
